server {
    listen 80;
    server_name decomp.me www.decomp.me;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# {{HTTPS_SERVER_BLOCK_START}}
server {
    listen 443 ssl http2;
    server_name decomp.me www.decomp.me;

    root /var/www/decomp.me;
    index index.html;

    ssl_certificate /etc/letsencrypt/live/decomp.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/decomp.me/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    brotli on;
    brotli_static on;
    brotli_types application/atom+xml application/javascript application/json application/rss+xml
                 application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
                 application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
                 font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
                 image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;

    error_page 502 /down.html;

    proxy_connect_timeout 3s;
    proxy_send_timeout 10s;
    proxy_read_timeout 60s;

    location / {
        try_files /down.html @proxy_frontend;
    }

    location /api {
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_down;
        try_files /down.html @proxy_api;
    }

    location /admin {
        try_files /down.html @proxy_api;
    }

    location /static/ {
        try_files $uri @proxy_api;
    }

    location /media/ {
        root /;
    }

    location @proxy_api {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://backend:8000;
    }

    location @proxy_frontend {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://frontend:8080;
    }

    location /_next/webpack-hmr {
        proxy_pass http://frontend:8080/_next/webpack-hmr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Avoid returning HTML from the /api endpoint if backend is unavailable
    location @backend_down {
        default_type application/json;
        return 503 '{}';
    }
}
# {{HTTPS_SERVER_BLOCK_END}}
